NetworkConhect::getLUT()
library(NetworkConhect)
getLUT()
devtools::load_all()
getLUT()
source("~/NetworkConhect/R/test_main.R", echo=TRUE)
??NetwokrConhect
??NetworkConhect
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
getLUT()
source("~/NetworkConhect/R/main.R", echo=TRUE)
install.packages("shiny")
library(NetworkConhect)
NetworkConhect::getLUT()
getLUT()
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
library(NetworkConhect)
devtools::document()
??NetworkConhect
?main_local_analysis
??NetworkConhect
help(package = "NetworkConhect")
devtools::install()
??NetworkConhect
library(NetworkConhect)
??NetworkConhect
?NetworkConhect
detach("package:igraph", unload = TRUE)
devtools::document()
library(NetworkConhect)
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
devtools::install()
library(NetworkConhect)
devtools::document()
devtools::install()
devtools::install()
devtools::install()
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
install.packages("roxygen2")
install.packages("rstatix")
install.packages("rstatix")
devtools::document()
install.packages("devtools")
devtools::document()
devtools::document()
rm(list = c("LinearModel_analysis", "main_global_llm"))
devtools::document()
library(NetworkConhect)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
library(NetworkConhect)
tdata <- read.table("/home/imabrain/test1.csv")
lmer(score ~ Group + (1|ids), data = tdata)
as.data.frame(installed.packages())
dfpkgNC <- as.data.frame(installed.packages()[,c(1,3:4)])
dfpkgNC
write.csv(dfpkgNC,"home/imabrain/pkgNC.csv")
write.csv(dfpkgNC,"/home/imabrain/pkgNC.csv")
lmer(score ~ Group + (1|ids), data = tdata)
fit <- lmer(score ~ Group + (1|ids), data = tdata)
summary(fit)
fit <- lmer(score ~ Group + (1|ids), data = tdata)
lmerTest::summary(fit)
fit <- lmerTest::lmer(score ~ Group + (1|ids), data = tdata)
lmerTest::summary(fit)
fit <- lmerTest::lmer(score ~ Group + (1|ids), data = tdata)
summary(fit)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
devtools.install()
devtools::install()
install.packages("devtools")
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
install.packages("roxygen2")
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
devtoos::document()
devtools::document()
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
devtools::document()
devtools::install()
devtools::document()
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
Gtes
Gtest
p<-1
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
Gtest
lmerTest::lmer(score~Group + (1|ids),Gtest)
colnames(Gtest)
write.csv(Gtest,"/home/imabrain/test2.csv")
G <- read.table("/home/imabrain/test2.csv")
LinearModel_analysis(G)
G <- read.csv("/home/imabrain/test2.csv")
head(G)
LinearModel_analysis(G)
View(G)
View(Gtest)
G
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
Gtest
Gtest <- Gtest[c(2,4,5)]
Gtest
Gtest <- read.table("/home/imabrain/test3.csv")
LinearModel_analysis(Gtest)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
head(Gtest)
Gtest <- Gtest[,c(2,4,5)]
Gtest
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
Gtest <- Gtest[,c(2,4,5)]
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
tdata <- read.table("/home/imabrain/test1.csv")
LinearModel_analysis(tdata)
tdata <- read.table("/home/imabrain/test1.csv")
LinearModel_analysis(tdata)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
remove.packages('brainGraph')
source("~/NetworkConhect/R/6_global_linear_model.R", echo=TRUE)
devtools::install()
devtools::document()
devtools::install()
devtools::document()
NormalizeY <- function(Gdata){
dataV1 <-subset(Gdata, Group == "V1")
norm_score <- bestNormalize::bestNormalize(dataV1$Y,standardize = FALSE)
norm_score
}
datat <- read.table("/home/imabrain/test1.csv")
NormalizeY(datat)
ns <-NormalizeY(datat)
ns
ns$method
ns$chosen_transform
ns$norm_stat_fn()
ns$new_transforms
ns$other_transforms
ns$chosen_transform
ns$chosen_transform$n
ns$chosen_transform$x.t
ns$chosen_transform$mean
ns$chosen_transform$standardize
ns$chosen_transform$norm_stat
ns$chosen_transform$mean
ns$chosen_transform$eps
ns$chosen_transform$b
ns$chosen_transform$standardize
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
ns
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
ns$1
ns$'1'
ns$'1'$x.t
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
ns$1
ns$'1'
len(ns$'1')
lenght(ns$'1')
length(ns$'1')
length(ns$'2')
length(ns$'3')
42+33+31
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
Gdata
ns$data
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
ns$'3'
ns$'2'
ns$'2'
ns$'1'
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
ns
length(ns$data)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
ns
ggplot(ns$'1',aes(x = y))+geom_histogram()
library(ggplot2)
d1 <- data.frame(y = ns$'1')
ggplot(ns$'1',aes(x = y))+geom_histogram()
ggplot(d1,aes(x = y))+geom_histogram()
d1 <- data.frame(y = ns$'2')
ggplot(d1,aes(x = y))+geom_histogram()
class(ns$'1')
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
ns$v1
ns$v2
ns$v3
c(ns$v1,ns$v2,ns$v3)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
source("~/NetworkConhect/R/5_global_rmanova.R", echo=TRUE)
norm_values(ns$v1,ns$v2,ns$v3)
norm_values<- c(ns$v1,ns$v2,ns$v3)
norm_values
datat$norm_val <- norm_values
datat
lmer(norm_val ~ Group + (1|ids),data = datat)
lmerTest::lmer(norm_val ~ Group + (1|ids),data = datat)
fit <- lmerTest::lmer(norm_val ~ Group + (1|ids),data = datat)
summary(fit)
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
source("~/NetworkConhect/R/3_compute_metrics.R", echo=TRUE)
source("~/NetworkConhect/R/3_compute_metrics.R", echo=TRUE)
devtools::install()
source("~/NetworkConhect/R/3_compute_metrics.R", echo=TRUE)
devtools::install()
print("erv",9)
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
#' Plot the edges weight distribution for each participant of a group. FA weighted
#'
#'
#' Get fractional anistropy edges weight distribution each participants of a group
#' (V1, V2, V3). Plot it as a ridge plot. Note : You can plot the three ridges side to side
#' by calling this function three times and using gridExtra::grid.arrange.
#'
#' @param dataFA dataframe containing all the FA weighted data
#' @param v_id chr visit id like "V1", "V2"...
#' @examples
#' plot_weight_distribution(data)
#' @export
get_edge_distribution <- function(dataFA,v_id){
idsV1 <- get_subject_ids(dataFA,v_id)
graph_V1 <- lapply( idsV1, FUN =  function(x) makeGraph(dataFA,x,v_id,"FA",0))
edges_V1 <- lapply(graph_V1, FUN = function(x) data.frame(E(x)$weight)[,1])
nb_edges <- lapply(edges_V1, length)
rep_ids <- c()
for(i in 1:length(idsV1)){
rep_idi <- lapply(nb_edges[[i]],FUN = function(x) rep(idsV1[[i]],x))
rep_ids <- c(rep_ids,rep_idi)
}
data_edge_V1 <- data.frame(
sub_ids = factor(unlist(rep_ids)),
edges = unlist(edges_V1)
)
data_edge_V1
}
source("~/NetworkConhect/R/2_graph_construction.R", echo=TRUE)
devtools::install()
library(NetworkConhect)
devtools::document()
devtools::install()
library(NetworkConhect)
library(NetworkConhect)
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
source("~/NetworkConhect/R/2_graph_construction.R", echo=TRUE)
devtools::install()
devtools::install()
devtools::install()
M <- readxl::read_excel("/home/imabrain/Documents/fbc_in_fullWM.xslx")
M <- readxl::read_excel("/home/imabrain/Documents/fbc_in_full_WM.xslx")
M <- readxl::read_excel("/home/imabrain/documents/fbc_in_full_WM.xslx")
M <- readxl::read_excel("/home/imabrain/Documents/fbc_in_full_WM.xlsx")
head(M)
getDataDir("FBC")
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
getDataDir("FBC")
head(M)
read_and_normalize_fbc <- function(data_path){
data_full <- read_excel(data_path)
if(WM_metric=='FBC'){
# drois <- separateRois(data_full)
df <- as.data.frame(cbind(drois[,1],drois[,2],drois[,6],drois[,7],drois[,9]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}else{
df <- as.data.frame(cbind(data_full[,1],data_full[,2],data_full[,12],data_full[,13],data_full[,10]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}
}
dp<-getDataDir("FBC")
Df <- read_and_normalize_fbc(dp)
read_and_normalize_fbc <- function(data_path){
data_full <- readxl::read_excel(data_path)
if(WM_metric=='FBC'){
# drois <- separateRois(data_full)
df <- as.data.frame(cbind(drois[,1],drois[,2],drois[,6],drois[,7],drois[,9]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}else{
df <- as.data.frame(cbind(data_full[,1],data_full[,2],data_full[,12],data_full[,13],data_full[,10]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}
}
Df <- read_and_normalize_fbc(dp)
read_and_normalize_fbc <- function(data_path,WM_metric){
data_full <- readxl::read_excel(data_path)
if(WM_metric=='FBC'){
# drois <- separateRois(data_full)
df <- as.data.frame(cbind(drois[,1],drois[,2],drois[,6],drois[,7],drois[,9]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}else{
df <- as.data.frame(cbind(data_full[,1],data_full[,2],data_full[,12],data_full[,13],data_full[,10]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}
}
Df <- read_and_normalize_fbc(dp,"FBC")
read_and_normalize_fbc <- function(data_path,WM_metric){
data_full <- readxl::read_excel(data_path)
if(WM_metric=='FBC'){
# drois <- separateRois(data_full)
df <- as.data.frame(cbind(data_full[,1],data_full[,2],data_full[,6],data_full[,7],data_full[,9]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}else{
df <- as.data.frame(cbind(data_full[,1],data_full[,2],data_full[,12],data_full[,13],data_full[,10]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}
}
Df <- read_and_normalize_fbc(dp,"FBC")
read_and_normalize_fbc <- function(data_path,WM_metric){
data_full <- readxl::read_excel(data_path)
if(WM_metric=='FBC'){
# drois <- separateRois(data_full)
df <- as.data.frame(cbind(data_full[,1],data_full[,2],data_full[,6],data_full[,7],data_full[,9]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}else{
df <- as.data.frame(cbind(data_full[,1],data_full[,2],data_full[,12],data_full[,13],data_full[,10]))
colnames(df) <- c('subject_id','visit_id','from','to','weight')
df
}
}
Df <- read_and_normalize_fbc(dp,"FBC")
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
Df <- read_and_normalize_fbc(dp,"FBC")
Df
head(Df)
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
head(Df)
head(Df)
Df <- read_and_normalize_fbc(dp,"FBC")
head(Df)
datafull <- readxl::read_excel(dp)
hist(datafull[,5])
datafull[,5]
datafull["fbc_single"]
hist(datafull["fbc_single"])
hist(datafull["fiber_density"])
datafull["fiber_density"][1]
datafull["fiber_density"][[1]]
hist(datafull["fiber_density"][[1]])
hist(datafull["Distance"][[1]])
hist(datafull["fbc_single"][[1]])
devtools::install()
devtools::install()
.Last.error
devtools::document()
.Last.error
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
devtools::install()
devtools::install()
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
devtools::install()
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
devtools::install()
devtools::install()
devtools::install()
devtools::install()
dev.off()
dev.off()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
source("~/NetworkConhect/R/1_load_data.R", echo=TRUE)
devtools::install()
use_git()
devtools::use_git()
